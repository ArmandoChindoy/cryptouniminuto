{"version":3,"sources":["reportWebVitals.js","pages/Home.jsx","router/Router.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","useState","matrixSecret","dimension","password","message","state","setState","setValues","e","matrix","console","log","target","name","value","className","onSubmit","preventDefault","parseInt","secret","split","map","matrixA","length","push","splice","toLowerCase","arrayMessage","forEach","letter","i","charCodeAt","matrixB","multiply","Swal","fire","error","Error","htmlFor","type","onChange","Router","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+EC0HCQ,MA5Hf,WAAiB,IAAD,EACYC,mBAAS,CACjCC,aAAc,CACZC,UAAW,GACXC,SAAU,IAEZC,QAAS,KANG,mBACPC,EADO,KACAC,EADA,KAwDd,SAASC,EAAUC,EAAGC,GACpB,OAAQA,GACN,IAAK,WACHC,QAAQC,IAAIH,GACZF,EAAS,2BACJD,GADG,IAENJ,aAAa,2BACRI,EAAMJ,cADC,kBAETO,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,WAG9B,MACF,IAAK,UACHJ,QAAQC,IAAIH,GAEZF,EAAS,2BACJD,GADG,kBAELG,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,UAOlC,OACE,mCACE,sBAAKC,UAAU,oBAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,oBAAIA,UAAU,cAAd,6BACA,oBAAIA,UAAU,UAEhB,uBAAMC,SA/EU,SAACR,GACrB,IACAA,EAAES,iBACF,IAAMf,EAAYgB,SAASb,EAAMJ,aAAaC,WAC1CiB,EAASd,EAAMJ,aAAaE,SAASiB,MAAM,IAC/CD,EAASA,EAAOE,KAAI,SAAAb,GAAC,OAAEU,SAASV,MAEhC,IADA,IAAMc,EAAU,GACTH,EAAOI,QAAQD,EAAQE,KAAKL,EAAOM,OAAO,EAAGvB,IACpD,IAAME,EAAUC,EAAMD,QAAQsB,cAAcN,MAAM,IAC5CO,EAAe,GACrBvB,EAAQwB,SAAQ,SAACC,GACf,IACIC,EAAID,EAAOE,WADH,GAEZJ,EAAaH,KAAKM,MAGpB,IADA,IAAME,EAAU,GACTL,EAAaJ,QAAQS,EAAQR,KAAKG,EAAaF,OAAO,EAAY,EAAVvB,IAE/DQ,QAAQC,IAAIN,GACZK,QAAQC,IAAIW,GACZZ,QAAQC,IAAIqB,GAEZtB,QAAQC,IAAIsB,YAASX,EAASU,IAE1BE,IAAKC,KAAK,OAAV,UAAqBF,YAASX,EAASU,IAAY,UACrD,MAAOI,GACL,MAAM,IAAIC,MACNH,IAAKC,KAAK,UAAV,sCAAyD,YAoD5BpB,UAAU,6BAA3C,UACE,sBAAKA,UAAU,qCAAf,UACE,oBAAIA,UAAU,KAAd,mBACA,iCACE,uBAAOuB,QAAQ,SAAf,sBACA,uBACA,uBACEC,KAAK,SACL1B,KAAK,WACL2B,SAAU,SAAChC,GAAD,OAAOD,EAAUC,EAAG,kBAGlC,iCACE,uBAAO8B,QAAQ,YAAf,8BACA,uBACA,uBACEC,KAAK,SACL1B,KAAK,YACL2B,SAAU,SAAChC,GAAD,OAAOD,EAAUC,EAAG,qBAIpC,sBAAKO,UAAU,qCAAf,UACE,oBAAIA,UAAU,KAAd,qBACA,uBACEwB,KAAK,OACL1B,KAAK,UACL2B,SAAU,SAAChC,GAAD,OAAOD,EAAUC,EAAG,iBAGlC,uBAAO+B,KAAK,SAASxB,UAAU,6BC3G1B0B,EAZA,WACX,OACI,mCACA,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW5C,W,MCF3C6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.3241b97c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from \"react\";\nimport  {multiply} from 'mathjs'\nimport \"./styles/Home.css\";\nimport Swal from 'sweetalert2'\n\nfunction Home() {\n  const [state, setState] = useState({\n    matrixSecret: {\n      dimension: \"\",\n      password: \"\",\n    },\n    message: \"\",\n});\nconst multiplyMatrixs = (e) => {\n    try {\n    e.preventDefault();\n    const dimension = parseInt(state.matrixSecret.dimension);\n    let secret = state.matrixSecret.password.split(\"\");\n    secret = secret.map(e=>parseInt(e));\n    const matrixA = [];\n    while (secret.length) matrixA.push(secret.splice(0, dimension));\n    const message = state.message.toLowerCase().split('');\n    const arrayMessage = [];\n    message.forEach((letter) => {\n      var index = 0;\n      var i = letter.charCodeAt(index);\n      arrayMessage.push(i);\n    });\n    const matrixB = [];\n    while (arrayMessage.length) matrixB.push(arrayMessage.splice(0,dimension*2));\n\n    console.log(state);\n    console.log(matrixA);\n    console.log(matrixB);\n\n    console.log(multiply(matrixA, matrixB));\n\n        Swal.fire('Nice', `${multiply(matrixA, matrixB)}`, 'Succes')\n    } catch (error ) {\n        throw new Error(\n            Swal.fire('Oops...', `No alcanc√© a terminar el parcial`, 'error')\n        )\n    }\n\n\n\n    /*\n    Output: 65\n*/\n  };\n\n  function createMatrix(N, M) {\n    var matrix = new Array(N); // Array with initial size of N, not fixed!\n\n    for (var i = 0; i < N; ++i) {\n      matrix[i] = new Array(M);\n    }\n\n    return matrix;\n  }\n\n  function setValues(e, matrix) {\n    switch (matrix) {\n      case \"password\":\n        console.log(e);\n        setState({\n          ...state,\n          matrixSecret: {\n            ...state.matrixSecret,\n            [e.target.name]: e.target.value,\n          },\n        });\n        break;\n      case \"message\":\n        console.log(e);\n\n        setState({\n          ...state,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n  return (\n    <>\n      <div className=\"container mx-auto\">\n        <div className=\"row justify-content-center\">\n          <h1 className=\"text-center\">Cifro Uniminuto</h1>\n          <h2 className=\"h2\"></h2>\n        </div>\n        <form onSubmit={multiplyMatrixs} className=\"row justify-content-center\">\n          <div className=\"inputs-container col-6 text-center\">\n            <h2 className=\"h2\">Clave</h2>\n            <span>\n              <label htmlFor=\"height\">Password</label>\n              <br />\n              <input\n                type=\"number\"\n                name=\"password\"\n                onChange={(e) => setValues(e, \"password\")}\n              />\n            </span>\n            <span>\n              <label htmlFor=\"dimension\">Matrix Dimension</label>\n              <br />\n              <input\n                type=\"number\"\n                name=\"dimension\"\n                onChange={(e) => setValues(e, \"password\")}\n              />\n            </span>\n          </div>\n          <div className=\"inputs-container col-6 text-center\">\n            <h2 className=\"h2\">Mensaje</h2>\n            <input\n              type=\"text\"\n              name=\"message\"\n              onChange={(e) => setValues(e, \"message\")}\n            />\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary\" />\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport {BrowserRouter, Switch ,Route } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nconst Router = () => {\n    return (\n        <>\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" component={Home}/>\n            </Switch>\n        </BrowserRouter>\n        </>\n    );\n}\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Router from './router/Router.js';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}